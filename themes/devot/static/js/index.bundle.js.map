{"version":3,"file":"index.bundle.js","mappings":"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","sources":["webpack:///./src/js/index.ts"],"sourcesContent":["import \"../css/style.css\";\n\nconst lightMode = \"☀️\";\nconst darkMode = \"🌙\";\n\nwindow.addEventListener(\"DOMContentLoaded\", async () => {\n    const observer = new IntersectionObserver((entries) => {\n        entries.forEach((entry) => {\n            const id = entry.target.getAttribute(\"id\");\n            if (entry.intersectionRatio > 0) {\n                document\n                    .querySelector(`nav li a[href=\"#${id}\"]`)\n                    .classList.add(\"active\");\n            } else {\n                document\n                    .querySelector(`nav li a[href=\"#${id}\"]`)\n                    .classList.remove(\"active\");\n            }\n        });\n    });\n\n    document.querySelectorAll(\"h2[id], h3[id]\").forEach((section) => {\n        observer.observe(section);\n    });\n\n    function utterancesTheme(currentMode: string) {\n        if (document.querySelector(\".utterances-frame\")) {\n            const theme =\n                currentMode === \"dark\" ? \"github-dark\" : \"github-light\";\n            const message = {\n                type: \"set-theme\",\n                theme: theme,\n            };\n            const iframe = document.querySelector(\n                \".utterances-frame\"\n            ) as HTMLIFrameElement;\n            iframe.contentWindow.postMessage(message, \"https://utteranc.es\");\n        }\n    }\n\n    const mode = document.getElementById(\"mode\") as HTMLElement;\n    const chromaTheme = document.getElementById(\n        \"chroma-theme\"\n    ) as HTMLLinkElement;\n\n    mode.addEventListener(\"click\", function () {\n        const currentMode = mode.textContent;\n        if (currentMode === lightMode) {\n            mode.textContent = darkMode;\n            document.documentElement.setAttribute(\"data-theme\", \"dark\");\n            localStorage.setItem(\"mode\", darkMode);\n\n            utterancesTheme(\"dark\");\n\n            chromaTheme.href = \"/css/syntax-dark.css\";\n        } else {\n            mode.textContent = lightMode;\n            document.documentElement.setAttribute(\"data-theme\", \"light\");\n            localStorage.setItem(\"mode\", lightMode);\n\n            utterancesTheme(\"light\");\n\n            chromaTheme.href = \"/css/syntax-light.css\";\n        }\n    });\n\n    const latestMode = localStorage.getItem(\"mode\");\n    if (latestMode) {\n        mode.textContent = latestMode;\n        if (latestMode === lightMode) {\n            document.documentElement.setAttribute(\"data-theme\", \"light\");\n        } else {\n            document.documentElement.setAttribute(\"data-theme\", \"dark\");\n            utterancesTheme(\"light\");\n\n            chromaTheme.href = \"/css/syntax-dark.css\";\n        }\n    } else {\n        mode.textContent = lightMode;\n        document.documentElement.setAttribute(\"data-theme\", \"light\");\n        localStorage.setItem(\"mode\", lightMode);\n    }\n\n    const tabIcon = document.getElementById(\"tab-icon\") as HTMLLinkElement;\n    const tabAppleIcon = document.getElementById(\n        \"tab-apple-icon\"\n    ) as HTMLLinkElement;\n    if (\n        window.matchMedia &&\n        window.matchMedia(\"(prefers-color-scheme: dark)\").matches\n    ) {\n        tabIcon.href = \"/images/logo-dark.svg\";\n        tabAppleIcon.href = \"/images/logo-dark.svg\";\n\n        document.getElementsByTagName(\"head\")[0].appendChild(tabIcon);\n        document.getElementsByTagName(\"head\")[0].appendChild(tabAppleIcon);\n    }\n\n    const alertAdblock = document.getElementById(\"alert-adblock\");\n    const isAdblock = await checkForAdBlocker();\n    if (isAdblock) {\n        alertAdblock.classList.remove(\"disable\");\n    }\n});\n\ndocument.addEventListener(\n    \"copy\",\n    (evt) => {\n        evt.clipboardData.setData(\n            \"text/plain\",\n            \"Copying is not allowed on this webpage\"\n        );\n\n        evt.preventDefault();\n    },\n    false\n);\n\nconst tabIcon = document.getElementById(\"tab-icon\") as HTMLLinkElement;\nconst tabAppleIcon = document.getElementById(\n    \"tab-apple-icon\"\n) as HTMLLinkElement;\nwindow\n    .matchMedia(\"(prefers-color-scheme: dark)\")\n    .addEventListener(\"change\", (e) => {\n        if (e.matches) {\n            tabIcon.href = \"/images/logo-dark.svg\";\n            tabAppleIcon.href = \"/images/logo-dark.svg\";\n        } else {\n            tabIcon.href = \"/images/logo-light.svg\";\n            tabAppleIcon.href = \"/images/logo-light.svg\";\n        }\n\n        document.getElementsByTagName(\"head\")[0].appendChild(tabIcon);\n        document.getElementsByTagName(\"head\")[0].appendChild(tabAppleIcon);\n    });\n\n// function fetchLikes(slug: string) {\n//     const data = {\n//         slug: slug,\n//     };\n\n//     fetch(\"/.netlify/functions/fetch-likes\", {\n//         method: \"POST\",\n//         body: JSON.stringify(data),\n//     })\n//         .then(function (res) {\n//             return res.json();\n//         })\n//         .then(function (data) {\n//         });\n// }\n\nfunction registerLikes(slug: string) {\n    const data = {\n        slug: slug,\n    };\n\n    fetch(\"/.netlify/functions/register-likes\", {\n        method: \"POST\",\n        body: JSON.stringify(data),\n    });\n}\n\nconst getCurrentPost = () => {\n    const pathName = window.location.pathname;\n    const pathElement = pathName.split(\"/\");\n\n    const length = pathElement.length;\n    const lastElement = pathElement[length - 1];\n    if (lastElement !== \"\") {\n        return lastElement;\n    }\n\n    return pathElement[length - 2];\n};\n\nconst likeButton = document.getElementById(\"like-button\");\nif (likeButton) {\n    likeButton.addEventListener(\"click\", () => registerLikes(getCurrentPost()));\n}\n\nasync function checkForAdBlocker() {\n    let Blocked: boolean;\n\n    async function Request() {\n        try {\n            return fetch(\n                \"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\",\n                {\n                    method: \"HEAD\",\n                    mode: \"no-cors\",\n                }\n            )\n                .then(function () {\n                    // There is no AdBlocker\n                    Blocked = false;\n                    return Blocked;\n                })\n                .catch(function () {\n                    // Failed, Because of an AdBlocker\n                    Blocked = true;\n                    return Blocked;\n                });\n        } catch (error) {\n            Blocked = true;\n            return Blocked;\n        }\n    }\n\n    return Blocked !== undefined ? Blocked : await Request();\n}\n"],"names":["lightMode","window","addEventListener","utterancesTheme","currentMode","document","querySelector","message","type","theme","contentWindow","postMessage","observer","IntersectionObserver","entries","forEach","entry","id","target","getAttribute","intersectionRatio","classList","add","remove","querySelectorAll","section","observe","mode","getElementById","chromaTheme","textContent","documentElement","setAttribute","localStorage","setItem","href","latestMode","getItem","tabIcon","tabAppleIcon","matchMedia","matches","getElementsByTagName","appendChild","alertAdblock","checkForAdBlocker","evt","clipboardData","setData","preventDefault","e","likeButton","Request","fetch","method","then","Blocked","error","undefined","pathElement","location","pathname","split","length","lastElement","slug","data","body","JSON","stringify"],"sourceRoot":""}