{"version":3,"file":"index.bundle.js","mappings":"yGAAA,QAEA,IAAMA,EAAoB,KAG1BC,OAAOC,iBAAiB,oBAAoB,WACxC,IAAMC,EAAW,IAAIC,sBAAqB,SAACC,GACvCA,EAAQC,SAAQ,SAACC,GACb,IAAMC,EAAKD,EAAME,OAAOC,aAAa,MACjCH,EAAMI,kBAAoB,EAC1BC,SACKC,cAAc,0BAAmBL,EAAE,OACnCM,UAAUC,IAAI,UAEnBH,SACKC,cAAc,0BAAmBL,EAAE,OACnCM,UAAUE,OAAO,gBASlC,SAASC,EAAgBC,GACrB,GAAIN,SAASC,cAAc,qBAAsB,CAC7C,IAEMM,EAAU,CACZC,KAAM,YACNC,MAHgB,SAAhBH,EAAyB,cAAgB,gBAK9BN,SAASC,cACpB,qBAEGS,cAAcC,YAAYJ,EAAS,wBAflDP,SAASY,iBAAiB,kBAAkBlB,SAAQ,SAACmB,GACjDtB,EAASuB,QAAQD,MAkBrB,IAAME,EAAOf,SAASgB,eAAe,QAC/BC,EAAajB,SAASgB,eAAe,eACrCE,EAAclB,SAASgB,eAAe,iBACtCG,EAAMnB,SAASgB,eAAe,OAC9BI,EAAcpB,SAASgB,eACzB,gBAGJD,EAAKzB,iBAAiB,SAAS,WACPyB,EAAKM,cACLjC,GAChB2B,EAAKM,YAhDQ,KAiDbrB,SAASsB,gBAAgBC,aAAa,aAAc,QACpDC,aAAaC,QAAQ,OAlDR,MAoDbpB,EAAgB,QAChBY,EAAWM,aACP,MACA,sCAEJL,EAAYK,aACR,MACA,sCAEJJ,EAAII,aAAa,MAAO,wBAExBH,EAAYM,KAAO,yBAEnBX,EAAKM,YAAcjC,EACnBY,SAASsB,gBAAgBC,aAAa,aAAc,SACpDC,aAAaC,QAAQ,OAAQrC,GAE7BiB,EAAgB,SAChBY,EAAWM,aAAa,MAAO,gCAC/BL,EAAYK,aAAa,MAAO,gCAChCJ,EAAII,aAAa,MAAO,yBAExBH,EAAYM,KAAO,4BAI3B,IAAMC,EAAaH,aAAaI,QAAQ,QACpCD,GACAZ,EAAKM,YAAcM,EACfA,IAAevC,EACfY,SAASsB,gBAAgBC,aAAa,aAAc,UAEpDvB,SAASsB,gBAAgBC,aAAa,aAAc,QACpDlB,EAAgB,SAChBY,EAAWM,aACP,MACA,sCAEJL,EAAYK,aACR,MACA,sCAEJJ,EAAII,aAAa,MAAO,wBAExBH,EAAYM,KAAO,0BAGvBX,EAAKM,YAAcjC,EACnBY,SAASsB,gBAAgBC,aAAa,aAAc,SACpDC,aAAaC,QAAQ,OAAQrC,S","sources":["webpack:///./src/js/index.ts"],"sourcesContent":["import \"../css/style.css\";\n\nconst lightMode: string = \"☀️\";\nconst darkMode: string = \"🌙\";\n\nwindow.addEventListener(\"DOMContentLoaded\", () => {\n    const observer = new IntersectionObserver((entries) => {\n        entries.forEach((entry) => {\n            const id = entry.target.getAttribute(\"id\");\n            if (entry.intersectionRatio > 0) {\n                document\n                    .querySelector(`nav li a[href=\"#${id}\"]`)\n                    .classList.add(\"active\");\n            } else {\n                document\n                    .querySelector(`nav li a[href=\"#${id}\"]`)\n                    .classList.remove(\"active\");\n            }\n        });\n    });\n\n    document.querySelectorAll(\"h2[id], h3[id]\").forEach((section) => {\n        observer.observe(section);\n    });\n\n    function utterancesTheme(currentMode: String) {\n        if (document.querySelector(\".utterances-frame\")) {\n            const theme =\n                currentMode === \"dark\" ? \"github-dark\" : \"github-light\";\n            const message = {\n                type: \"set-theme\",\n                theme: theme,\n            };\n            const iframe = document.querySelector(\n                \".utterances-frame\"\n            ) as HTMLIFrameElement;\n            iframe.contentWindow.postMessage(message, \"https://utteranc.es\");\n        }\n    }\n\n    const mode = document.getElementById(\"mode\") as HTMLElement;\n    const githubIcon = document.getElementById(\"github-icon\");\n    const githubIcon1 = document.getElementById(\"github-icon-1\");\n    const rss = document.getElementById(\"rss\");\n    const chromaTheme = document.getElementById(\n        \"chroma-theme\"\n    ) as HTMLLinkElement;\n\n    mode.addEventListener(\"click\", function () {\n        const currentMode = mode.textContent;\n        if (currentMode === lightMode) {\n            mode.textContent = darkMode;\n            document.documentElement.setAttribute(\"data-theme\", \"dark\");\n            localStorage.setItem(\"mode\", darkMode);\n\n            utterancesTheme(\"dark\");\n            githubIcon.setAttribute(\n                \"src\",\n                \"/images/GitHub-Mark-Light-32px.png\"\n            );\n            githubIcon1.setAttribute(\n                \"src\",\n                \"/images/GitHub-Mark-Light-32px.png\"\n            );\n            rss.setAttribute(\"src\", \"/images/rss-dark.png\");\n\n            chromaTheme.href = \"/css/syntax-dark.css\";\n        } else {\n            mode.textContent = lightMode;\n            document.documentElement.setAttribute(\"data-theme\", \"light\");\n            localStorage.setItem(\"mode\", lightMode);\n\n            utterancesTheme(\"light\");\n            githubIcon.setAttribute(\"src\", \"/images/GitHub-Mark-32px.png\");\n            githubIcon1.setAttribute(\"src\", \"/images/GitHub-Mark-32px.png\");\n            rss.setAttribute(\"src\", \"/images/rss-light.png\");\n\n            chromaTheme.href = \"/css/syntax-light.css\";\n        }\n    });\n\n    const latestMode = localStorage.getItem(\"mode\");\n    if (latestMode) {\n        mode.textContent = latestMode;\n        if (latestMode === lightMode) {\n            document.documentElement.setAttribute(\"data-theme\", \"light\");\n        } else {\n            document.documentElement.setAttribute(\"data-theme\", \"dark\");\n            utterancesTheme(\"light\");\n            githubIcon.setAttribute(\n                \"src\",\n                \"/images/GitHub-Mark-Light-32px.png\"\n            );\n            githubIcon1.setAttribute(\n                \"src\",\n                \"/images/GitHub-Mark-Light-32px.png\"\n            );\n            rss.setAttribute(\"src\", \"/images/rss-dark.png\");\n\n            chromaTheme.href = \"/css/syntax-dark.css\";\n        }\n    } else {\n        mode.textContent = lightMode;\n        document.documentElement.setAttribute(\"data-theme\", \"light\");\n        localStorage.setItem(\"mode\", lightMode);\n    }\n});\n"],"names":["lightMode","window","addEventListener","observer","IntersectionObserver","entries","forEach","entry","id","target","getAttribute","intersectionRatio","document","querySelector","classList","add","remove","utterancesTheme","currentMode","message","type","theme","contentWindow","postMessage","querySelectorAll","section","observe","mode","getElementById","githubIcon","githubIcon1","rss","chromaTheme","textContent","documentElement","setAttribute","localStorage","setItem","href","latestMode","getItem"],"sourceRoot":""}